height = 2
width = 3
ls()
area = height * width
area
ls()
area
is.*(height)
is.*()
poker_vector1 <- c(140, -50, 20, -120, 240)
names(poker_vector1) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
poker_vector2 <- c(Monday = 140, -50, 20, -120, 240)
roulette_vector1 <- c(-24, -50, 100, -350, 10)
days_vector <- names(poker_vector1)
names(roulette_vector1) <- days_vector
roulette_vector2 <- c(-24, -50, 100, -350, 10)
names(roulette_vector2) <- "Monday"
poker_vector1 <- c(140, -50, 20, -120, 240)
names(poker_vector1) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
poker_vector1
poker_vector2 <- c(Monday = 140, -50, 20, -120, 240)
poker_vector2
roulette_vector1 <- c(-24, -50, 100, -350, 10)
days_vector <- names(poker_vector1)
names(roulette_vector1) <- days_vector
roulette_vector1
roulette_vector2 <- c(-24, -50, 100, -350, 10)
names(roulette_vector2) <- "Monday"
roulette_vector2
poker_vector1 <- c(140, -50, 20, -120, 240)
names(poker_vector1) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
length(poker_vector1)
poker_vector2 <- c(Monday = 140, -50, 20, -120, 240)
length(poker_vector2)
roulette_vector1 <- c(-24, -50, 100, -350, 10)
days_vector <- names(poker_vector1)
names(roulette_vector1) <- days_vector
length(roulette_vector1)
roulette_vector2 <- c(-24, -50, 100, -350, 10)
names(roulette_vector2) <- "Monday"
length(roulette_vector2)
poker_vector <- c(140, -50, 20, -120, 240)
roulette_vector <- c(-24, -50, 100, -350, 10)
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
# Select amounts for profitable roulette days: roulette_profits
roulette_profits <- roulette_vector[roulette_vector > 0]
# Sum of the profitable roulette days: roulette_total_profit
roulette_total_profit <- sum(roulette_profits)
# Number of profitable roulette days: num_profitable_days
num_profitable_days <- sum(roulette_vector>0)
num_profitable_days
x = c(1,2,3,4,5)
y = c(T,F,T,F,T)
x[y]
x = c(1,2,3,4,5)
y = c(T,F,T,F,T)
x[y]
order(y)
?sapply
install.packages("mlbench")
library(mlbench)
data(package = "mlbench")
data("PimaIndiansDiabetes")
head(PimaIndiansDiabetes)
data(iris)
summary(iris)
library(caret)
data(iris)
preprocess<-preprocess(iris[,1:4],method = c("range"))
preprocess<-preProcess(iris[,1:4],method = c("range"))
transformed<-predict(preprocess,iris[,1:4])
summary(transformed)
library(caret)
data("iris")
trainControl <- trainControl(method = "cv", number = 10)
fit <- train(Species~.,data=iris, trControl=trainControl,method = "nb")
library(e1071)
data("iris")
trainControl <- trainControl(method = "cv", number = 10)
fit <- train(Species~.,data=iris, trControl=trainControl,method = "nb")
install.packages(e1071)
install.packages("e1071")
trainControl <- trainControl(method = "cv", number = 10)
fit <- train(Species~.,data=iris, trControl=trainControl,method = "nb")
print(fit)
library(caret)
setwd("E:\\kaggle\\titanic")
cluster<-makeCluster(4)
install.packages("doParallel")
cluster<-makeCluster(detectCores())
library(doParallel)
cluster<-makeCluster(detectCores())
cluster
registerDoParallel(cluster)
setwd("E:\\kaggle\\titanic")
library(caret)
library(tidyr)
library(dplyr)
library(ggplot2)
train <- tbl_df(read.csv("train.csv", stringsAsFactors = FALSE))
summary(train)
test<-tbl_df(read.csv("test.csv", stringsAsFactors = FALSE))
summary(train$Name)
test$Survived<- 0
titanic<- rbind(train,test)
titanic$Survived<-factor(titanic$Survived)
titanic$Pclass<-factor(titanic$Pclass)
titanic$Sex<-factor(titanic$Sex)
titanic$SibSp<-factor(titanic$SibSp)
titanic$Parch<-factor(titanic$Parch)
summary(titanic)
titanic$Embarked<-factor(titanic$Embarked)
titanic$Embarked[(titanic$Embarked)==""]<-'S'
titanic$Name<-as.character(titanic$Name)
titanic[is.na(titanic$Fare),]
titanic[titanic$Embarked=='S',]
?table
table(titanic$Survived,titanic$Sex)
table(titanic$Sex,titanic$Embarked)
ggplot(titanic)+geom_boxplot(aes(x=Fare))
preobj<-preProcess(titanic[,c("Age","Sex","Parch","SibSp","Fare","Pclass","Embarked")],method = c("bagImpute"))
preobj$bagImp$Age$model$mtrees
summary(preobj)
titanic1<-predict(preobj,titanic[,c("Age","Sex","Parch","SibSp","Fare","Pclass","Embarked")])
dim(titanic1)
titanic1$Survived <-titanic$Survived
titanic1
Summary(titanic1)
str(titanic1)
library(doParallel)
cluster<-makeCluster(detectCores())
registerDoParallel(cluster)
library(caret)
library(tidyr)
library(dplyr)
library(ggplot2)
train <- tbl_df(read.csv("train.csv", stringsAsFactors = FALSE))
summary(train)
test<-tbl_df(read.csv("test.csv", stringsAsFactors = FALSE))
summary(train$Name)
test$Survived<- 0
titanic<- rbind(train,test)
titanic$Survived<-factor(titanic$Survived)
titanic$Pclass<-factor(titanic$Pclass)
titanic$Sex<-factor(titanic$Sex)
titanic$SibSp<-factor(titanic$SibSp)
titanic$Parch<-factor(titanic$Parch)
summary(titanic)
titanic$Embarked<-factor(titanic$Embarked)
titanic$Embarked[(titanic$Embarked)==""]<-'S'
titanic$Name<-as.character(titanic$Name)
titanic[is.na(titanic$Fare),]
titanic[titanic$Embarked=='S',]
?table
table(titanic$Sex,titanic$Embarked)
table(titanic$Survived,titanic$Sex)
preobj<-preProcess(titanic[,c("Age","Sex","Parch","SibSp","Fare","Pclass","Embarked")],method = c("bagImpute"))
preobj$bagImp$Age$model$mtrees
summary(preobj)
titanic1<-predict(preobj,titanic[,c("Age","Sex","Parch","SibSp","Fare","Pclass","Embarked")])
dim(titanic1)
titanic1$Survived <-titanic$Survived
Summary(titanic1)
str(titanic1)
titanic[titanic$Embarked=='S',]
titanic$Embarked[(titanic$Embarked)==""]<-'S'
titanic[titanic$PassengerId==63,]
titanic[titanic1$PassengerId==63,]
titanic[titanic1$Embarked=="S",]
titanic[titanic1$Sex=="female",]
titanic[titanic1$Sex=="female",titanic1$Embarked]
is.na(test$Embarked)
test$Embarked[is.na(test$Embarked)]
summary(test)
titanic<- rbind(train,test)
titanic$Survived<-factor(titanic$Survived)
titanic$Pclass<-factor(titanic$Pclass)
titanic$Sex<-factor(titanic$Sex)
titanic$SibSp<-factor(titanic$SibSp)
titanic$Parch<-factor(titanic$Parch)
titanic$Embarked<-factor(titanic$Embarked)
summary(titanic)
titanic$Embarked[(titanic$Embarked)==""]<-'S'
summary(titanic)
titanic$Embarked<-factor(titanic$Embarked)
titanic$Embarked[(titanic$Embarked)==""]<-'S'
summary(titanic)
titanic$Name<-as.character(titanic$Name)
titanic[is.na(titanic$Fare),]
table(titanic$Sex,titanic$Embarked)
table(titanic$Survived,titanic$Sex)
preobj<-preProcess(titanic[,c("Age","Sex","Parch","SibSp","Fare","Pclass","Embarked")],method = c("bagImpute"))
preobj$bagImp$Age$model$mtrees
summary(preobj)
titanic1<-predict(preobj,titanic[,c("Age","Sex","Parch","SibSp","Fare","Pclass","Embarked")])
dim(titanic1)
titanic1$Survived <-titanic$Survived
str(titanic1)
test$Embarked[is.na(test$Embarked)]
summary(test)
is.na(titanic1$Age)
is.na(titanic1$Age)==T
titanic1$Age[is.na(titanic1$Age)==T]
extractTitle<-function(x){
title<-str_trim(strsplit(x,split='[,.]')[[1]][[2]])
if(title %in%c('Mme','Mlle'))
return('Mlle')
else if(title %in% c('Dona','Lady',"the Countess"))
return ('Lady')
else if(title %in% c('Capt','Don','Major','Sir','Jonkheer','Dr'))
return ('Sir')
else
return(title)
return ('Lady')
}
titanic1$Title<-sapply(titanic1$Name,FUN=extractTitle)
str(titanic1)
titanic1$Title<-sapply(titanic$Name,FUN=extractTitle)
library(stringr)
extractTitle<-function(x){
title<-str_trim(strsplit(x,split='[,.]')[[1]][[2]])
if(title %in%c('Mme','Mlle'))
return('Mlle')
return ('Lady')
else if(title %in% c('Dona','Lady',"the Countess"))
else if(title %in% c('Capt','Don','Major','Sir','Jonkheer','Dr'))
return ('Sir')
else
return(title)
return ('Lady')
}
extractTitle<-function(x){
title<-str_trim(strsplit(x,split='[,.]')[[1]][[2]])
if(title %in%c('Mme','Mlle'))
return('Mlle')
else if(title %in% c('Dona','Lady',"the Countess"))
return ('Lady')
else if(title %in% c('Capt','Don','Major','Sir','Jonkheer','Dr'))
return ('Sir')
else
return(title)
return ('Lady')
}
titanic1$Title<-sapply(titanic$Name,FUN=extractTitle)
str(titanic1)
table(titanic1$Sex,titanic1$Title)
extractTitle<-function(x){
title<-str_trim(strsplit(x,split='[,.]')[[1]][[2]])
if(title %in%c('Mme','Mlle'))
return('Mlle')
else if(title %in% c('Dona','Lady',"the Countess"))
return ('Lady')
else if(title %in% c('Capt','Don','Major','Sir','Jonkheer','Dr'))
return ('Sir')
else
return(title)
}
titanic1$Title<-sapply(titanic$Name,FUN=extractTitle)
str(titanic1)
table(titanic1$Sex,titanic1$Title)
titanic1$Title[titanic1$Sex == "female" & titanic1$Title ="Dr"] = "Ms"
